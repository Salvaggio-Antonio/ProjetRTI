/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ClientsActivite;

import ProtocoleFUCAMP.ReponseFUCAMP;
import ProtocoleFUCAMP.RequeteFUCAMP;
import com.raven.datechooser.SelectedDate;
import Utilities.Configuration;
import Utilities.RequeteUtils;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Salva
 */
public class InscriptionActivite extends javax.swing.JDialog {

    private ObjectInputStream ois;
    private ObjectOutputStream oos;
    private Socket cliSock;
    public String id;
    public int duree;
    public Configuration config;

    /**
     * Creates new form NewJDialog
     */
    public InscriptionActivite(java.awt.Frame parent, boolean modal, String id, String nom, String type, String duree, Configuration c) throws IOException, ClassNotFoundException, SQLException {
        super(parent, modal);
        initComponents();
        this.id = id;
        jLabelId.setText("id: " + id);
        jLabelNom.setText("Nom: " + nom);
        jLabelType.setText("type: " + type);
        jLabelDuree.setText(duree + " jours");
        this.duree = Integer.parseInt(duree);
        config = c;
        //Connexion();
        initParticipants();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooser = new com.raven.datechooser.DateChooser();
        jLabelId = new javax.swing.JLabel();
        jLabelNom = new javax.swing.JLabel();
        jLabelType = new javax.swing.JLabel();
        jLabelDuree = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextEmail = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextNom = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableP = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        datetxt = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();

        dateChooser.setDateFormat("dd-MMMM-yyyy");
        dateChooser.setTextRefernce(datetxt);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabelId.setText("id");

        jLabelNom.setText("Nom");

        jLabelType.setText("Type ");

        jLabelDuree.setText("Duree");

        jLabel5.setText("Liste des participants");

        jLabel6.setText("Inscription :");

        jLabel7.setText("Email");

        jLabel8.setText("Nom");

        jLabel9.setText("Date ");

        jButton1.setText("Inscrire");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTableP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nom", "PrÃ©nom", "Email", "date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableP);
        if (jTableP.getColumnModel().getColumnCount() > 0) {
            jTableP.getColumnModel().getColumn(0).setResizable(false);
            jTableP.getColumnModel().getColumn(1).setResizable(false);
            jTableP.getColumnModel().getColumn(2).setResizable(false);
            jTableP.getColumnModel().getColumn(3).setResizable(false);
            jTableP.getColumnModel().getColumn(4).setResizable(false);
        }

        jButton2.setText("Supprimer");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        datetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datetxtActionPerformed(evt);
            }
        });

        jButton3.setText("...");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(189, 189, 189))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(187, 187, 187))))
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(datetxt)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jTextEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextNom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(159, 159, 159)
                                .addComponent(jButton1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelId, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelNom, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelType, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73)
                        .addComponent(jLabelDuree, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelId)
                    .addComponent(jLabelNom)
                    .addComponent(jLabelType)
                    .addComponent(jLabelDuree))
                .addGap(38, 38, 38)
                .addComponent(jLabel5)
                .addGap(3, 3, 3)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jTextNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(datetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3)
                            .addComponent(jLabel9))
                        .addGap(43, 43, 43)
                        .addComponent(jButton1)))
                .addGap(7, 7, 7))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        SelectedDate d = dateChooser.getSelectedDate();
        LocalDate dateUtilisateur = LocalDate.of(d.getYear(), d.getMonth(), d.getDay());
        if (dateUtilisateur.compareTo(LocalDate.now()) < 0) {
            JOptionPane.showMessageDialog(null, "La date choisie est antÃ©rieur Ã  la date d'aujourd'hui", "CAUTION ! ", JOptionPane.INFORMATION_MESSAGE);
        } else {
            if (jTextNom.getText() != null && !jTextNom.getText().equals("") && jTextEmail.getText() != null && !jTextEmail.getText().equals("")) {
                RequeteFUCAMP req;
                ReponseFUCAMP rep;
                try {
                    String env = jTextNom.getText() + ":" + jTextEmail.getText() + ":" + d.getYear() + "-" + d.getMonth() + "-" + d.getDay() + ":" + duree + ":" + id;

                    req = new RequeteFUCAMP(RequeteFUCAMP.RESERVATIONACTIVITE, env);

                    ois = null;
                    oos = null;
                    cliSock = null;
                    try {
                        cliSock = new Socket(config.getAdresse(), config.getPort());
                        System.out.println(cliSock.getInetAddress().toString());
                    } catch (IOException ex) {
                        Logger.getLogger(LoginActivite.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    // Envoie de la requÃªte
                    RequeteUtils.SendRequest(req, "RESERVATIONACTIVITE", oos, cliSock);

                    // Lecture de la rÃ©ponse
                    rep = (ReponseFUCAMP) RequeteUtils.ReceiveRequest(cliSock, ois, "FUCAMP");
                    
                    JOptionPane.showMessageDialog(null,rep.getChargeUtile(), "CAUTION ! ", JOptionPane.INFORMATION_MESSAGE);

                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(LoginActivite.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Veuillez saisir tout les champs !!", "CAUTION ! ", JOptionPane.INFORMATION_MESSAGE);
            }
            try {
                initParticipants();
            } catch (ClassNotFoundException | SQLException | IOException ex) {
                Logger.getLogger(InscriptionActivite.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (jTableP.getSelectedRow() != -1) {
            RequeteFUCAMP req;
            try {
                String env = id + ":" + jTableP.getValueAt(jTableP.getSelectedRow(), 0) + ":" + jTableP.getValueAt(jTableP.getSelectedRow(), 4);

                req = new RequeteFUCAMP(RequeteFUCAMP.DELETERESERVATION, env);

                ois = null;
                oos = null;
                cliSock = null;
                try {
                    cliSock = new Socket(config.getAdresse(), config.getPort());
                    System.out.println(cliSock.getInetAddress().toString());
                } catch (IOException ex) {
                    Logger.getLogger(LoginActivite.class.getName()).log(Level.SEVERE, null, ex);
                }

                RequeteUtils.SendRequest(req, "DELETERESERVATION", oos, cliSock);
                ReponseFUCAMP r;
                r = (ReponseFUCAMP) RequeteUtils.ReceiveRequest(cliSock, ois, "FUCAMP");
                
                JOptionPane.showMessageDialog(null, "code : " + r.getCode(), "CAUTION ! ", JOptionPane.INFORMATION_MESSAGE);

            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(LoginActivite.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                initParticipants();
            } catch (ClassNotFoundException | SQLException | IOException ex) {
                Logger.getLogger(InscriptionActivite.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void datetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_datetxtActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        dateChooser.showPopup();
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.raven.datechooser.DateChooser dateChooser;
    private javax.swing.JTextField datetxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelDuree;
    private javax.swing.JLabel jLabelId;
    private javax.swing.JLabel jLabelNom;
    private javax.swing.JLabel jLabelType;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableP;
    private javax.swing.JTextField jTextEmail;
    private javax.swing.JTextField jTextNom;
    // End of variables declaration//GEN-END:variables

    public void initParticipants() throws ClassNotFoundException, SQLException, IOException {

        RequeteFUCAMP req;
        req = new RequeteFUCAMP(RequeteFUCAMP.GETALLPARTICIPANTSBYACTIVITE, id);
        ois = null;
        oos = null;
        cliSock = null;

        try {
            cliSock = new Socket(config.getAdresse(), config.getPort());
            System.out.println(cliSock.getInetAddress().toString());
        } catch (IOException ex) {
            Logger.getLogger(LoginActivite.class.getName()).log(Level.SEVERE, null, ex);
        }

        RequeteUtils.SendRequest(req, "GETALLPARTICIPANTSBYACTIVITE", oos, cliSock);
        // Lecture de la rÃ©ponse
        ReponseFUCAMP rep;

        rep = (ReponseFUCAMP) RequeteUtils.ReceiveRequest(cliSock, ois, "FUCAMP");
        if (rep.getCode() == ReponseFUCAMP.OK) {

            DefaultTableModel model = (DefaultTableModel) jTableP.getModel();
            while (model.getRowCount() != 0) {
                model.removeRow(0);
            }
           
            String r = rep.getChargeUtile();
            String[] tmp = r.split(";");

            for (int i = 0; i < tmp.length; i++) {
                String[] champs = tmp[i].split(":");
                model.addRow(new Object[]{champs[0], champs[1], champs[2], champs[3], champs[4]});
            }
        } else if (rep.getCode() == ReponseFUCAMP.PARTICIPANTS_NOT_FOUND) {
            DefaultTableModel model = (DefaultTableModel) jTableP.getModel();
            while (model.getRowCount() != 0) {
                model.removeRow(0);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Probleme !", "CAUTION ! ", JOptionPane.INFORMATION_MESSAGE);
        }

    }

}
